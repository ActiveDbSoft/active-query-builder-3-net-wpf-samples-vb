''*******************************************************************''
''       Active Query Builder Component Suite                        ''
''                                                                   ''
''       Copyright Â© 2006-2021 Active Database Software              ''
''       ALL RIGHTS RESERVED                                         ''
''                                                                   ''
''       CONSULT THE LICENSE AGREEMENT FOR INFORMATION ON            ''
''       RESTRICTIONS.                                               ''
''*******************************************************************''

Imports ActiveQueryBuilder.Core.PropertiesEditors
Imports ActiveQueryBuilder.View.PropertiesEditors
Imports ActiveQueryBuilder.View.WPF.DatabaseSchemaView
Imports ActiveQueryBuilder.View.WPF.ExpressionEditor
Imports ActiveQueryBuilder.View.WPF.QueryView
Imports ActiveQueryBuilder.View.ExpressionEditor
Imports FullFeaturedMdiDemo.AutoGeneratedProperties.Tabs

Namespace AutoGeneratedProperties
    ''' <summary>
    ''' Interaction logic for QueryPropertiesWindow.xaml
    ''' </summary>
    Partial Public Class QueryPropertiesWindow
        Private ReadOnly _linkToPageGeneral As New Dictionary(Of TextBlock, FrameworkElement)()
        Private ReadOnly _linkToPageFormatting As New Dictionary(Of TextBlock, FrameworkElement)()

        Private ReadOnly _sqlGenerationControl As UserControl
        Private ReadOnly _textEditorOptions As New TextEditorOptions()
        Private ReadOnly _textEditorSqlOptions As New SqlTextEditorOptions()
        Private ReadOnly _childWindow As ChildWindow
        Private ReadOnly _dbSchemaView As DatabaseSchemaView

        Private _currentGeneralSelectedLink As TextBlock
        Private _currentFormattingSelectedLink As TextBlock
        Private _structureOptionsChanged As Boolean

        Public Sub New()
            InitializeComponent()
        End Sub

        Public Sub New(childWindow As ChildWindow, schemaView As DatabaseSchemaView)
            InitializeComponent()

            _childWindow = childWindow
            _dbSchemaView = schemaView

            linkAddObject.Visibility = Visibility.Collapsed

            ' SQL Formatting options ============================
            ' main query
            _linkToPageFormatting.Add(LinkMain, New MainQueryTab(childWindow.SqlFormattingOptions))
            _linkToPageFormatting.Add(LinkMainCommon, New CommonTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.MainQueryFormat))
            _linkToPageFormatting.Add(LinkMainExpressions, New ExpressionsTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.MainQueryFormat))
            ' CTE query
            _linkToPageFormatting.Add(LinkCte, New SubQueryTab(childWindow.SqlFormattingOptions, SubQueryType.Cte))
            _linkToPageFormatting.Add(LinkCteCommon, New CommonTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.CTESubQueryFormat))
            _linkToPageFormatting.Add(LinkCteExpressions, New ExpressionsTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.CTESubQueryFormat))
            ' Derived table
            _linkToPageFormatting.Add(LinkDerived, New SubQueryTab(childWindow.SqlFormattingOptions, SubQueryType.Derived))
            _linkToPageFormatting.Add(LinkDerivedCommon, New CommonTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.DerivedQueryFormat))
            _linkToPageFormatting.Add(LinkDerivedExpressions, New ExpressionsTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.DerivedQueryFormat))
            ' expression
            _linkToPageFormatting.Add(LinkExpression, New SubQueryTab(childWindow.SqlFormattingOptions, SubQueryType.Expression))
            _linkToPageFormatting.Add(LinkExpressionCommon, New CommonTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.ExpressionSubQueryFormat))
            _linkToPageFormatting.Add(LinkExpressionExpressions, New ExpressionsTab(childWindow.SqlFormattingOptions, childWindow.SqlFormattingOptions.ExpressionSubQueryFormat))

            _sqlGenerationControl = New SqlGenerationPage(childWindow.SqlGenerationOptions, childWindow.SqlFormattingOptions)
            _linkToPageGeneral.Add(linkBehavior, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.BehaviorOptions)))
            _linkToPageGeneral.Add(linkSchemaView, GetPropertyPage(New ObjectProperties(schemaView.Options)))
            _linkToPageGeneral.Add(linkDesignPane, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.DesignPaneOptions)))
            _linkToPageGeneral.Add(linkVisual, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.VisualOptions)))
            _linkToPageGeneral.Add(linkDatasource, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.DataSourceOptions)))
            _linkToPageGeneral.Add(linkMetadataLoading, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.MetadataLoadingOptions)))
            _linkToPageGeneral.Add(linkMetadataStructure, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.MetadataStructureOptions)))
            _linkToPageGeneral.Add(linkQueryColumnList, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.QueryColumnListOptions)))
            _linkToPageGeneral.Add(linkQueryNavBar, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.QueryNavBarOptions)))
            _linkToPageGeneral.Add(linkUserInterface, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.UserInterfaceOptions)))
            _linkToPageGeneral.Add(linkExpressionEditor, GetPropertyPage(New ObjectProperties(childWindow.ContentControl.ExpressionEditorOptions)))

            _textEditorOptions.Assign(CType(childWindow.ContentControl.TextEditorOptions, ITextEditorOptions))
            AddHandler _textEditorOptions.Updated, AddressOf TextEditorOptionsOnUpdated
            _linkToPageGeneral.Add(linkTextEditor, GetPropertyPage(New ObjectProperties(_textEditorOptions)))

            _textEditorSqlOptions.Assign(CType(childWindow.ContentControl.TextEditorSqlOptions, ISqlTextEditorOptions))
            AddHandler _textEditorSqlOptions.Updated, AddressOf TextEditorOptionsOnUpdated
            _linkToPageGeneral.Add(linkTextEditorSql, GetPropertyPage(New ObjectProperties(_textEditorSqlOptions)))

            GeneralLinkClick(linkGeneration, Nothing)
            FormattingLinkClick(LinkMain, Nothing)

            AddHandler childWindow.MetadataStructureOptions.Updated, AddressOf MetadataStructureOptionsOnUpdated
        End Sub

        Protected Overrides Sub OnClosing(e As CancelEventArgs)
            My.Settings.Default.Options = _childWindow.GetOptions().SerializeToString()
            My.Settings.Default.Save()

            If _structureOptionsChanged Then
                _dbSchemaView.InitializeDatabaseSchemaTree()
            End If

            MyBase.OnClosing(e)
        End Sub

        Private Sub MetadataStructureOptionsOnUpdated(sender As Object, e As EventArgs)
            _structureOptionsChanged = True
        End Sub

        Private Sub TextEditorOptionsOnUpdated(sender As Object, eventArgs As EventArgs)
            _childWindow.ContentControl.TextEditorOptions = _textEditorOptions
            _childWindow.ContentControl.TextEditorSqlOptions = _textEditorSqlOptions
        End Sub

        Private Function GetPropertyPage(propertiesObject As ObjectProperties) As FrameworkElement
            Dim propertiesContainer = PropertiesFactory.GetPropertiesContainer(propertiesObject)

            ' create property page control
            Dim propertyPage = New PropertiesBar()

            ' set properties to property page
            Dim propertiesControl = DirectCast(propertyPage, IPropertiesControl)
            propertiesControl.SetProperties(propertiesContainer)

            Return propertyPage
        End Function

        Private Sub GeneralLinkClick(sender As Object, e As MouseButtonEventArgs)
            If _currentGeneralSelectedLink IsNot Nothing Then
                _currentGeneralSelectedLink.Foreground = Windows.Media.Brushes.Black
            End If

            _currentGeneralSelectedLink = DirectCast(sender, TextBlock)
            _currentGeneralSelectedLink.Foreground = Windows.Media.Brushes.Blue

            If Equals(_currentGeneralSelectedLink, linkGeneration) Then
                gridGeneral.Children.Clear()
                _sqlGenerationControl.Margin = New Thickness(10, 10, 0, 0)
                gridGeneral.Children.Add(_sqlGenerationControl)
                Return
            End If

            SwitchGeneralPage(_linkToPageGeneral(_currentGeneralSelectedLink))
        End Sub

        Private Sub SwitchGeneralPage(page As FrameworkElement)
            gridGeneral.Children.Clear()
            page.Margin = New Thickness(10, 10, 0, 0)
            gridGeneral.Children.Add(page)
        End Sub

        Private Sub SwitchFormattingPage(page As FrameworkElement)
            gridFormatting.Children.Clear()
            page.Margin = New Thickness(10, 10, 0, 0)
            gridFormatting.Children.Add(page)
        End Sub

        Private Sub ButtonCancel_OnClick(sender As Object, e As RoutedEventArgs)
            DialogResult = True
        End Sub

        Private Sub FormattingLinkClick(sender As Object, e As MouseButtonEventArgs)
            If _currentFormattingSelectedLink IsNot Nothing Then
                _currentFormattingSelectedLink.Foreground = Windows.Media.Brushes.Black
            End If

            _currentFormattingSelectedLink = DirectCast(sender, TextBlock)
            _currentFormattingSelectedLink.Foreground = Windows.Media.Brushes.Blue
            SwitchFormattingPage(_linkToPageFormatting(_currentFormattingSelectedLink))
        End Sub
    End Class
End Namespace
