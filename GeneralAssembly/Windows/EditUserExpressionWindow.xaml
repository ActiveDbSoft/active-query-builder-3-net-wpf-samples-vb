<Window x:Class="Windows.EditUserExpressionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:common="clr-namespace:Common"
        mc:Ignorable="d"
        Title="Edit Predefined Conditions" Height="450" Width="862.812" ShowInTaskbar="False" WindowStyle="ToolWindow">
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <ListBox SelectionMode="Single" 
                 x:Name="ListBoxUserExpressions" 
                 Grid.Column="0" SelectionChanged="ListBoxUserExpressions_OnSelectionChanged" Grid.Row="0"/>

        <Border Grid.Column="1" Padding="4,0" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="0">
            <StackPanel >
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="Image">
                        <Setter Property="Width" Value="16"/>
                        <Setter Property="Height" Value="16"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Value="false">
                                <Setter Property="Opacity" Value="0.3"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Button Margin="0,0,0,5" x:Name="ButtonAddNew" Click="ButtonAddNew_OnClick" ToolTip="Add new">
                    <Image Source="/GeneralAssembly;component/Resources/add.png"/>
                </Button>
                <Button Margin="0,0,0,5" x:Name="ButtonCopyCurrent" Click="ButtonCopyCurrent_OnClick" IsEnabled="False" ToolTip="Copy selected">
                    <Image Source="/GeneralAssembly;component/Resources/copy.png" />
                </Button>
                <Button Margin="0,0,0,5" x:Name="ButtonDelete" Click="ButtonDelete_OnClick" IsEnabled="False" ToolTip="Delete selected">
                    <Image Source="/GeneralAssembly;component/Resources/delete.png"  />
                </Button>
                <Button Margin="0,0,0,5" x:Name="ButtonMoveUp" IsEnabled="False" Click="ButtonMoveUp_OnClick"  Width="19" ToolTip="Move up">
                    <Image Source="/GeneralAssembly;component/Resources/arrowUp.png" Width="11"/>
                </Button>
                <Button Margin="0,0,0,5" x:Name="ButtonMoveDown" IsEnabled="False" Click="ButtonMoveDown_OnClick" Width="19" ToolTip="Move down">
                    <Image Source="/GeneralAssembly;component/Resources/arrowDown.png" Width="11"/>
                </Button>
            </StackPanel>
        </Border>

        <StackPanel Grid.Column="2" Margin="5,0,0,0" Grid.Row="0">
            <Border Padding="5" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" BorderThickness="1">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ButtonSave, Path=IsEnabled}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Background" Value="{x:Static SystemColors.InfoBrush}"/>
                                    <Setter Property="BorderBrush" Value="{x:Static SystemColors.HighlightBrush}"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Caption" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Grid.Row="0" Grid.Column="2" Height="{Binding ElementName=ComboboxDbTypes, Path=ActualHeight}" x:Name="TextBoxCaption"
                         TextChanged="TextBoxCaption_OnTextChanged"/>

                    <TextBlock Text="Condition" Grid.Row="2" Grid.Column="0" VerticalAlignment="Top"/>
                    <TextBox Grid.Row="2" 
                         Grid.Column="2"  
                         x:Name="TextBoxExpression" 
                         Height="80" 
                         Padding="3"
                         TextChanged="TextBoxExpression_OnTextChanged"
                         AcceptsReturn="True" 
                         TextWrapping="Wrap" VerticalContentAlignment="Top"/>

                    <CheckBox  Grid.Row="4" Grid.Column="2"
                           VerticalContentAlignment="Center" 
                           VerticalAlignment="Center"
                           IsThreeState="False" 
                           x:Name="CheckBoxIsNeedEdit" 
                           Checked="CheckBoxIsNeedEdit_OnCheckChanged" 
                           Unchecked="CheckBoxIsNeedEdit_OnCheckChanged">
                        <CheckBox.Content>
                            <TextBlock Text="Move focus to the newly added expression in the Query Columns grid for editing" VerticalAlignment="Center"  
                                   TextWrapping="Wrap"/>
                        </CheckBox.Content>
                    </CheckBox>

                    <TextBlock Text="Apply to types" Grid.Row="6" Grid.Column="0"/>
                    <common:CheckableCombobox Grid.Row="6" Grid.Column="2" x:Name="ComboboxDbTypes" IsEditable =" true" IsReadOnly="True" ItemCheckStateChanged="ComboboxDbTypes_OnItemCheckStateChanged"/>

                    <StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="2">
                        <Button Width="100" 
                                HorizontalAlignment="Left" 
                                Content="Save" 
                                Margin="0,0,0,0" 
                                Padding="3" 
                                x:Name="ButtonSave" 
                                Click="ButtonSaveForm_OnClick" 
                                IsEnabled="False"/>
                        <Button Content="Revert"  Width="100" Click="ButtonRevert_OnClick" Margin="5,0,0,0">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ButtonSave, Path=IsEnabled}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <TextBlock HorizontalAlignment="Center" 
                       VerticalAlignment="Center" 
                       TextOptions.TextFormattingMode="Display" 
                       Text="Changes will not be saved unless you click the Save button."
                       FontWeight="Bold" 
                       Foreground="#FF9B0000"
                       SnapsToDevicePixels="True"
                       Margin="0,5,0,0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=ButtonSave, Path=IsEnabled}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Column="2"  HorizontalAlignment="Right" VerticalAlignment="Bottom" >
            <Button Content="OK" Width="100" Click="ButtonOk_OnClick" Margin="0,0,5,0"/>
        </StackPanel>
    </Grid>
</Window>
